name: Build, test & deploy to review

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    name: Test
    if: github.head_ref != 'main' && github.head_ref != 'dev'
    runs-on: ubuntu-latest
    steps:
      - name: Checkouts repository
        uses: actions/checkout@v2

      - name: Setups node and npm
        uses: actions/setup-node@v1

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install Dependencies
        run: echo "installing dependencies... (replace with npm install)"

      - name: Run tests
        run: |
          echo "running tests... (replace with npm test)"  
          mkdir coverage && echo "test_results" >> coverage/index.html
            
      - name: Archive code coverage results
        uses: actions/upload-artifact@v2
        with:
          name: code-coverage-report
          path: coverage/index.html 

  build_and_deploy:
    name: Build & Deploy
    if: github.head_ref != 'main' && github.head_ref != 'dev'
    needs: [test]
    runs-on: ubuntu-latest
    env:
      ENV_ID: ${{ github.head_ref }}
    steps:
      - name: Checkouts repository
        uses: actions/checkout@v2

      - name: Setups node and npm
        uses: actions/setup-node@v1

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install Dependencies
        run: echo "installing dependencies... (replace with npm install)"

      - name: Build
        run: |
          echo "building app... (replace with npm build)"
          mkdir dist && echo "built_files" >> dist/index.js

      - name: Archive production artifacts
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: |
            dist

      - name: Deploys to production
        run: |
          echo "deploying to $ENV_ID... (replace with deploy commands)"
      
